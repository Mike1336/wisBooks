{"version":3,"sources":["./src/app/authors/authors-routing.module.ts","./src/app/authors/authors.module.ts","./src/app/authors/components/authors/authors.component.ts","./src/app/authors/components/authors/authors.component.html","./src/app/authors/services/authors.service.ts"],"names":[],"mappings":"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","file":"authors-authors-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthorsComponent } from './components/authors/authors.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthorsComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthorsRoutingModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { LayoutModule } from './../layout/layout.module';\nimport { AuthorsRoutingModule } from './authors-routing.module';\nimport { AuthorsComponent } from './components/authors/authors.component';\n\n@NgModule({\n  declarations: [\n    AuthorsComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatTableModule,\n    MatProgressSpinnerModule,\n    AuthorsRoutingModule,\n    LayoutModule,\n  ],\n})\nexport class AuthorsModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { takeUntil, delay, map } from 'rxjs/operators';\n\nimport { AuthorService } from '../../services/authors.service';\n\nimport { IAuthors } from './../../interfaces/author';\nimport { IPaginatorData } from './../../../layout/paginator/paginator.component';\n\n\n@Component({\n  templateUrl: './authors.component.html',\n  styleUrls: ['./authors.component.scss'],\n})\nexport class AuthorsComponent implements OnInit, OnDestroy {\n\n  public authorsQuantity: number;\n  public loading: boolean;\n\n  public displayedColumns: string[] = ['#', 'firstname', 'lastname'];\n  public dataSource = new MatTableDataSource();\n\n  private authors$: Observable<IAuthors>;\n  private authorsQuantity$: Observable<IAuthors>;\n  private destroy$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private authorsService: AuthorService,\n    ) { }\n\n  public ngOnInit(): void {\n    this.authorsQuantity$ = this.authorsService.getAuthorsInQuantity(1);\n    this.authorsQuantity$\n      .pipe(\n        map((data) => data.meta.pages),\n        takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.authorsQuantity = data;\n      });\n  }\n  public ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n  public takePaginator(pagData: IPaginatorData): void {\n    this.dataSource.paginator = pagData.paginator;\n    this.authors$ = this.authorsService.getAuthorsInQuantity(this.authorsQuantity);\n    this.authors$\n      .pipe(\n        map((data) => data.authors),\n        takeUntil(this.destroy$))\n      .subscribe((authors) => {\n        this.dataSource.data = authors;\n      });\n  }\n\n}\n","<div id=\"authors\" >\n\n  <mat-spinner *ngIf=\"loading; else authorsBlock\"></mat-spinner>\n\n  <ng-template #authorsBlock>\n    <div id=\"tableContent\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 data-table\">\n\n          <ng-container matColumnDef=\"#\">\n            <th mat-header-cell *matHeaderCellDef> # </th>\n            <td mat-cell *matCellDef=\"let author\"> {{author.id}} </td>\n          </ng-container>\n        \n          <ng-container matColumnDef=\"firstname\">\n            <th mat-header-cell *matHeaderCellDef> FIRSTNAME </th>\n            <td mat-cell *matCellDef=\"let author\"> {{author.first_name}} </td>\n          </ng-container>\n        \n          <ng-container matColumnDef=\"lastname\">\n            <th mat-header-cell *matHeaderCellDef> LASTNAME </th>\n            <td mat-cell *matCellDef=\"let author\"> {{author.last_name}} </td>\n          </ng-container>\n          \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns, sticky: true\" ></tr>\n          <tr mat-row *matRowDef=\"let author; columns: displayedColumns;\" \n          [routerLink]=\"['/author', author.id]\"></tr>\n      </table>\n      <app-paginator \n      [maxLength]=\"dataSource.data.length\" \n      [itemsPerPage]='[10, 25, 50]' \n      (create)=\"takePaginator($event)\"></app-paginator>\n    </div>\n  </ng-template>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { IAuthor, IAuthors } from '../interfaces/author';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorService {\n\n  private apiUrl = 'http://muzhikov.kubesh.ru/api/';\n  private authorsEndpoint = 'authors';\n\n  constructor(private http: HttpClient) { }\n\n  public getAuthorsInQuantity(quantity: number): Observable<IAuthors> {\n    return this.http.get<IAuthors>(`${this.apiUrl}${this.authorsEndpoint}?limit=${quantity}`);\n  }\n  public getAuthorById(authorId: number): Observable<object> {\n    return this.http.get<IAuthor>(`${this.apiUrl}${this.authorsEndpoint}/${authorId}`);\n  }\n  public createAuthor(author: IAuthor): Observable<object> {\n    const url = `${this.apiUrl}${this.authorsEndpoint}`;\n\n    return this.http.post<IAuthor>(url, author);\n  }\n  public updateAuthor(author: IAuthor): Observable<object> {\n    const url = `${this.apiUrl}${this.authorsEndpoint}/${author.id}`;\n\n    return this.http.put<IAuthor>(url, author);\n  }\n  public deleteAuthor(authorId: number): Observable<object> {\n    return this.http.delete<IAuthor>(`${this.apiUrl}${this.authorsEndpoint}/${authorId}`);\n  }\n\n\n}"],"sourceRoot":"webpack:///"}