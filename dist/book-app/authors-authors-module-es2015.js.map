{"version":3,"sources":["./src/app/authors/authors-routing.module.ts","./src/app/authors/authors.module.ts","./src/app/authors/components/authors/authors.component.ts","./src/app/authors/components/authors/authors.component.html","./src/app/authors/services/authors.service.ts"],"names":[],"mappings":"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","file":"authors-authors-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthorsComponent } from './components/authors/authors.component';\n\nconst routes: Routes = [\n  {\n    path: ':number',\n    component: AuthorsComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '1',\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthorsRoutingModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { AuthorsRoutingModule } from './authors-routing.module';\nimport { AuthorsComponent } from './components/authors/authors.component';\n\n@NgModule({\n  declarations: [\n    AuthorsComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatPaginatorModule,\n    MatTableModule,\n    AuthorsRoutingModule,\n  ],\n})\nexport class AuthorsModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { AuthorService } from '../../services/authors.service';\n\nimport { IAuthor, IAuthors } from './../../interfaces/author';\n\n\n@Component({\n  templateUrl: './authors.component.html',\n  styleUrls: ['./authors.component.scss'],\n})\nexport class AuthorsComponent implements OnInit, OnDestroy {\n\n  public authors: IAuthor[] = [];\n  public authorPageQuantity: number = 0;\n\n  public authors$: Observable<IAuthors>;\n\n  public displayedColumns: string[] = ['#', 'firstname', 'lastname'];\n\n  private destroy$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private authorsService: AuthorService,\n    private route: ActivatedRoute,\n    ) { }\n\n  public ngOnInit(): void {\n    this.route.params\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((params) => {\n        this.authors$ = this.authorsService.getAuthorsInPage(params.number);\n      });\n    this.authors$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.authors = data.authors;\n        console.log(this.authors)\n        this.authorPageQuantity = data.meta.pages;\n      });\n  }\n  public ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n\n}\n","<table mat-table [dataSource]=\"authors\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"#\">\n      <th mat-header-cell *matHeaderCellDef> # </th>\n      <td mat-cell *matCellDef=\"let author\"> {{author.id}} </td>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"firstname\">\n      <th mat-header-cell *matHeaderCellDef> FIRSTNAME </th>\n      <td mat-cell *matCellDef=\"let author\"> {{author.first_name}} </td>\n    </ng-container>\n  \n    <ng-container matColumnDef=\"lastname\">\n      <th mat-header-cell *matHeaderCellDef> LASTNAME </th>\n      <td mat-cell *matCellDef=\"let author\"> {{author.last_name}} </td>\n    </ng-container>\n    \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let author; columns: displayedColumns;\" \n    [routerLink]=\"['author', author.id]\"></tr>\n  </table>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { IAuthor, IAuthors } from '../interfaces/author';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorService {\n\n  private apiUrl = 'http://muzhikov.kubesh.ru/api/';\n  private authorsEndpoint = 'authors';\n\n  constructor(private http: HttpClient) { }\n\n  public getAuthorsInPage(page: number): Observable<IAuthors> {\n    return this.http.get<IAuthors>(`${this.apiUrl}${this.authorsEndpoint}?page=${page}`);\n  }\n  public getAuthorById(authorId: number): Observable<object> {\n    return this.http.get<IAuthor>(`${this.apiUrl}${this.authorsEndpoint}/${authorId}`);\n  }\n  public createAuthor(author: IAuthor): Observable<object> {\n    const url = `${this.apiUrl}${this.authorsEndpoint}`;\n\n    return this.http.post<IAuthor>(url, author);\n  }\n  public updateAuthor(author: IAuthor): Observable<object> {\n    const url = `${this.apiUrl}${this.authorsEndpoint}/${author.id}`;\n\n    return this.http.put<IAuthor>(url, author);\n  }\n  public deleteAuthor(authorId: number): Observable<object> {\n    return this.http.delete<IAuthor>(`${this.apiUrl}${this.authorsEndpoint}/${authorId}`);\n  }\n\n\n}"],"sourceRoot":"webpack:///"}