{"version":3,"sources":["webpack:///src/app/authors/authors-routing.module.ts","webpack:///src/app/authors/authors.module.ts","webpack:///src/app/authors/components/authors/authors.component.ts","webpack:///src/app/authors/components/authors/authors.component.html","webpack:///src/app/authors/services/authors.service.ts"],"names":["routes","path","component","redirectTo","AuthorsRoutingModule","forChild","imports","exports","AuthorsModule","declarations","AuthorsComponent","authorsService","displayedColumns","dataSource","destroy$","authorsQuantity$","getAuthorsInQuantity","pipe","data","meta","pages","subscribe","authorsQuantity","next","complete","pagData","paginator","authors$","authors","templateUrl","styleUrls","AuthorService","http","apiUrl","authorsEndpoint","quantity","get","authorId","author","url","post","id","put","providedIn"],"mappings":"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","file":"authors-authors-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthorsComponent } from './components/authors/authors.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthorsComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthorsRoutingModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { LayoutModule } from './../layout/layout.module';\nimport { AuthorsRoutingModule } from './authors-routing.module';\nimport { AuthorsComponent } from './components/authors/authors.component';\n\n@NgModule({\n  declarations: [\n    AuthorsComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatTableModule,\n    MatProgressSpinnerModule,\n    AuthorsRoutingModule,\n    LayoutModule,\n  ],\n})\nexport class AuthorsModule { }\n","import { Component, OnInit, OnDestroy } from '@angular/core';\n\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { ReplaySubject, Observable } from 'rxjs';\nimport { takeUntil, delay, map } from 'rxjs/operators';\n\nimport { AuthorService } from '../../services/authors.service';\n\nimport { IAuthors } from './../../interfaces/author';\nimport { IPaginatorData } from './../../../layout/paginator/paginator.component';\n\n\n@Component({\n  templateUrl: './authors.component.html',\n  styleUrls: ['./authors.component.scss'],\n})\nexport class AuthorsComponent implements OnInit, OnDestroy {\n\n  public authorsQuantity: number;\n  public loading: boolean;\n\n  public displayedColumns: string[] = ['#', 'firstname', 'lastname'];\n  public dataSource = new MatTableDataSource();\n\n  private authors$: Observable<IAuthors>;\n  private authorsQuantity$: Observable<IAuthors>;\n  private destroy$ = new ReplaySubject<any>(1);\n\n  constructor(\n    private authorsService: AuthorService,\n    ) { }\n\n  public ngOnInit(): void {\n    this.authorsQuantity$ = this.authorsService.getAuthorsInQuantity(1);\n    this.authorsQuantity$\n      .pipe(\n        map((data) => data.meta.pages),\n        takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.authorsQuantity = data;\n      });\n  }\n  public ngOnDestroy(): void {\n    this.destroy$.next(null);\n    this.destroy$.complete();\n  }\n  public takePaginator(pagData: IPaginatorData): void {\n    this.dataSource.paginator = pagData.paginator;\n    this.authors$ = this.authorsService.getAuthorsInQuantity(this.authorsQuantity);\n    this.authors$\n      .pipe(\n        map((data) => data.authors),\n        takeUntil(this.destroy$))\n      .subscribe((authors) => {\n        this.dataSource.data = authors;\n      });\n  }\n\n}\n","<div id=\"authors\" >\n\n  <mat-spinner *ngIf=\"loading; else authorsBlock\"></mat-spinner>\n\n  <ng-template #authorsBlock>\n    <div id=\"tableContent\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 data-table\">\n\n          <ng-container matColumnDef=\"#\">\n            <th mat-header-cell *matHeaderCellDef> # </th>\n            <td mat-cell *matCellDef=\"let author\"> {{author.id}} </td>\n          </ng-container>\n        \n          <ng-container matColumnDef=\"firstname\">\n            <th mat-header-cell *matHeaderCellDef> FIRSTNAME </th>\n            <td mat-cell *matCellDef=\"let author\"> {{author.first_name}} </td>\n          </ng-container>\n        \n          <ng-container matColumnDef=\"lastname\">\n            <th mat-header-cell *matHeaderCellDef> LASTNAME </th>\n            <td mat-cell *matCellDef=\"let author\"> {{author.last_name}} </td>\n          </ng-container>\n          \n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns, sticky: true\" ></tr>\n          <tr mat-row *matRowDef=\"let author; columns: displayedColumns;\" \n          [routerLink]=\"['/author', author.id]\"></tr>\n      </table>\n      <app-paginator \n      [maxLength]=\"dataSource.data.length\" \n      [itemsPerPage]='[10, 25, 50]' \n      (create)=\"takePaginator($event)\"></app-paginator>\n    </div>\n  </ng-template>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { IAuthor, IAuthors } from '../interfaces/author';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorService {\n\n  private apiUrl = 'http://muzhikov.kubesh.ru/api/';\n  private authorsEndpoint = 'authors';\n\n  constructor(private http: HttpClient) { }\n\n  public getAuthorsInQuantity(quantity: number): Observable<IAuthors> {\n    return this.http.get<IAuthors>(`${this.apiUrl}${this.authorsEndpoint}?limit=${quantity}`);\n  }\n  public getAuthorById(authorId: number): Observable<object> {\n    return this.http.get<IAuthor>(`${this.apiUrl}${this.authorsEndpoint}/${authorId}`);\n  }\n  public createAuthor(author: IAuthor): Observable<object> {\n    const url = `${this.apiUrl}${this.authorsEndpoint}`;\n\n    return this.http.post<IAuthor>(url, author);\n  }\n  public updateAuthor(author: IAuthor): Observable<object> {\n    const url = `${this.apiUrl}${this.authorsEndpoint}/${author.id}`;\n\n    return this.http.put<IAuthor>(url, author);\n  }\n  public deleteAuthor(authorId: number): Observable<object> {\n    return this.http.delete<IAuthor>(`${this.apiUrl}${this.authorsEndpoint}/${authorId}`);\n  }\n\n\n}"]}