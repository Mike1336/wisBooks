{"version":3,"sources":["webpack:///src/app/authors/authors-routing.module.ts","webpack:///src/app/authors/authors.module.ts","webpack:///src/app/authors/components/authors/authors.component.ts","webpack:///src/app/authors/components/authors/authors.component.html","webpack:///src/app/authors/containers/authors/authors.container.ts","webpack:///src/app/authors/containers/authors/authors.container.html","webpack:///src/app/authors/views/authors/authors.view.ts","webpack:///src/app/authors/views/authors/authors.view.html"],"names":["routes","path","component","redirectTo","AuthorsRoutingModule","forChild","imports","exports","AuthorsModule","declarations","AuthorsComponent","_title","displayedColumns","dataSource","setTitle","data","authors","sort","paginator","event","filterValue","target","value","filter","trim","toLowerCase","firstPage","applyFilter","takePaginator","selector","templateUrl","styleUrls","changeDetection","OnPush","AuthorsContainer","_authorsService","getAuthors","authors$","getAuthorsInQuantity","pipe","meta","records","quantity","authorsQuantity","AuthorsView"],"mappings":"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","file":"authors-authors-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthorsView } from './views/authors/authors.view';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthorsView,\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthorsRoutingModule {\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedModule } from './../shared/shared.module';\nimport { LayoutModule } from './../layout/layout.module';\nimport { AuthorsRoutingModule } from './authors-routing.module';\nimport { AuthorsComponent } from './components/authors/authors.component';\nimport { AuthorsContainer } from './containers/authors/authors.container';\nimport { AuthorsView } from './views/authors/authors.view';\n\n@NgModule({\n  declarations: [\n    AuthorsComponent,\n    AuthorsContainer,\n    AuthorsView,\n  ],\n  imports: [\n    // Angular\n    CommonModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    // Own\n    AuthorsRoutingModule,\n    LayoutModule,\n    SharedModule,\n  ],\n})\nexport class AuthorsModule { }\n","import { Component, OnInit, ViewChild, Input, ChangeDetectionStrategy, AfterViewInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\nimport { IAuthor } from './../../interfaces/author';\n\n\n@Component({\n  selector: 'authors-component',\n  templateUrl: './authors.component.html',\n  styleUrls: ['./authors.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AuthorsComponent implements OnInit, AfterViewInit {\n\n\n  public displayedColumns: string[] = ['id', 'first_name', 'last_name'];\n  public dataSource = new MatTableDataSource();\n\n  @Input()\n  public authors: IAuthor[];\n\n  @ViewChild(MatSort)\n  public sort: MatSort;\n\n  constructor(private _title: Title) { }\n\n  public ngOnInit(): void {\n    this._title.setTitle('All authors');\n    this.dataSource.data = this.authors;\n  }\n  public ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n  }\n  /**\n   * Takes in a paginator and set to dataSource\n   *\n   * @param paginator The MatPaginator object from own component\n   */\n  public takePaginator(paginator: MatPaginator): void {\n    this.dataSource.paginator = paginator;\n  }\n  public applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n}\n","<div id=\"authors\">\n  <div id=\"tableContent\">\n    <mat-form-field>\n      <mat-label>Search</mat-label>\n      <input\n        matInput\n        (keyup)=\"applyFilter($event)\"\n        placeholder=\"#, first name or last name\"\n        #input\n      />\n    </mat-form-field>\n    <table\n      mat-table\n      [dataSource]=\"dataSource\"\n      matSort\n      class=\"mat-elevation-z8 data-table\"\n    >\n      <ng-container matColumnDef=\"id\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>#</th>\n        <td mat-cell *matCellDef=\"let author\">{{ author.id }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"first_name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>FIRSTNAME</th>\n        <td mat-cell *matCellDef=\"let author\">{{ author.first_name }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"last_name\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>LASTNAME</th>\n        <td mat-cell *matCellDef=\"let author\">{{ author.last_name }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n      <tr mat-row *matRowDef=\"let author; columns: displayedColumns\"></tr>\n    </table>\n\n    <app-paginator\n      [records]=\"authors.length\"\n      [limits]=\"[10, 25, 50]\"\n      (create)=\"takePaginator($event)\"\n    ></app-paginator>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { map, mergeMap, pluck, switchMap } from 'rxjs/operators';\n\nimport { IAuthor, IAuthors } from '../../interfaces/author';\nimport { AuthorsService } from '../../services/authors.service';\n\n\n@Component({\n  selector: 'authors-container',\n  templateUrl: './authors.container.html',\n  styleUrls: ['./authors.container.scss'],\n})\nexport class AuthorsContainer implements OnInit {\n\n  public authorsQuantity: number;\n\n  public authors$: Observable<IAuthor[]>;\n\n  constructor(private _authorsService: AuthorsService) { }\n\n  public ngOnInit(): void {\n    this.getAuthors();\n  }\n\n    /**\n   * Returns Observable with authors list\n   */\n  public getAuthors(): void {\n    this.authors$ = this._authorsService.getAuthorsInQuantity(1)\n      .pipe(\n        map((data) => {\n          return data.meta.records;\n        }),\n        switchMap((quantity: number): Observable<IAuthors> => {\n          this.authorsQuantity = quantity;\n\n          return this._authorsService.getAuthorsInQuantity(quantity);\n        }),\n        pluck('authors'),\n      );\n  }\n\n}\n","<authors-component *ngIf=\"authors$ | async as authors; else loading\"\n    [authors]=\"authors\">\n</authors-component>\n\n<ng-template #loading>\n    <div id=\"spinner\">\n        <mat-spinner></mat-spinner>\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-authors',\n  templateUrl: './authors.view.html',\n  styleUrls: ['./authors.view.scss'],\n})\nexport class AuthorsView implements OnInit {\n\n  constructor() { }\n\n  public ngOnInit(): void {\n  }\n\n}\n","<authors-container></authors-container>"]}